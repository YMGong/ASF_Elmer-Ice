check keywords warn
echo on
! 
! working units are MPa, a, m
! 
! THIS IS THE PARAMATER SPACE
! sea level
$sl0 = 0.0
! the inflow velocity at X=0 in m/a
$U0 = 8000.0
! the ablation (in m/a)
$ablation = -1.0
$gradablation = 0.0
!
! derived parameter
! working units are MPa, a, mfixed constants
! 
$H0 = 680.0
$yearinsec = 365.25*24.0*60.0*60.0
$rhoi = 910.0/(1.0e6*yearinsec^2)
$rhow = 1030.0/(1.0e6*yearinsec^2)
$A = 4.6416e-25*yearinsec*1.0e18
$n = 3.0
$eta = 1.0/(2.0*A)^(1.0/n)
$gravity = -9.8*yearinsec^2
$slope = 1.0/40.0
!$C = (rhoi * gravity * H0 * slope)/U0 ! driving stress is 149 kPa
$C = 5.0e-05
! the timestep
$dt = 2.0/(24.0 * 365.25) ! 2 hours
$tspan = 12.0 * 12.0 * 7.0 ! 12 weeks
$tout = 12.0              ! 1 day

$namerun = "hel_680m_U8000_c5e-05_sl0_a-1_2h1d-200m_deep"

$ function tangentialupdate(X) import dt{\
   _tangentialupdate = X(0) + X(1) * dt *  X(2);\
}
$ function getslipcoeff(X) import C{\
   if (X < 2000.0) {factor = 1.0;}\
   else {factor = 0.001;}\
   _getslipcoeff = factor * C;\
}

Header
  Mesh DB "." "block_helheim_superfine"
End

Constants
  Water Density = Real $rhow
End

!---------------------------------------------------
!---------------- SIMULATION -----------------------
!---------------------------------------------------

Simulation
  Coordinate System  = Cartesian 2D 
  Simulation Type = transient

  Timestepping Method = "bdf"
  BDF Order = 1
  Timestep Intervals = $tspan 
  Output Intervals = $tout
  Timestep Sizes = $dt

  Initialize Dirichlet Conditions = Logical False
  Steady State Max Iterations = 1
  Steady State Min Iterations = 1

  Post File = "$namerun"_.vtu" !"
  Output File = "$namerun".result" !"
  max output level = 3
End

!---------------------------------------------------
!---------------- BODIES ---------------------------
!---------------------------------------------------

! the ice 
Body 1
  Name = "ice"
  Equation = 1
  Body Force = 1
  Material = 1
  Initial Condition = 1
End

! The upper surface
Body 2
  Name= "top free surface"
  Equation = 2
  Material = 1
  Body Force = 2
  Initial Condition = 2
End

! the lower surface
Body 3
  Name= "free surface sea/ice-shelf"
  Equation = 3
  Material = 1
  Body Force = 3
  Initial Condition = 3
End

!---------------------------------------------------
!---------------- INITIAL CONDITIONS ---------------
!---------------------------------------------------

!! for ice 
Initial Condition 1
  Pressure = Real 0.0
  Velocity 1 = Real 0.0
  Velocity 2 = Real 0.0
  Mesh Velocity 1 = Real 0.0
  Mesh Velocity 2 = Real 0.0
  Mesh Velocity 3 = Real 0.0
  Mesh Update 1 = Real 0.0
  Mesh Update 2 = Real 0.0
End

!! for top free surface
Initial Condition 2
  Zs = Equals Coordinate 2
  Reference Zs =  Equals Coordinate 2
End

!! for free surface sea/ice-shelf
Initial Condition 3
  Zb = Variable Coordinate 1
    Real Procedure "bedrockfunction_deepening" "initbedrock"
  Reference Zb = Variable Coordinate 1
    Real Procedure "bedrockfunction_deepening" "initbedrock"
  bedrock = Variable Coordinate 1
    Real Procedure "bedrockfunction_deepening" "initbedrock"
End

!---------------------------------------------------
!---------------- BODY FORCES ----------------------
!---------------------------------------------------

Body Force 1
  Flow BodyForce 1 = Real 0.0
  Flow BodyForce 2 = Real $gravity
End

!! accumulation flux in m/year
Body Force 2
   Zs Accumulation Flux 1 = Real 0.0e0
   Zs Accumulation Flux 2 = Real $ablation !m/a
   !Zs Accumulation Flux 2 = Variable Coordinate 1
   ! Real MATC "fablation(tx)"
End

!! no melting/accretion under ice/shelf
Body Force 3
  Zb Accumulation = Real 0.0e0
End

!---------------------------------------------------
!---------------- MATERIALS ------------------------
!---------------------------------------------------

!! ice material properties in MPa - m - a system 
Material 1



  Density = Real $rhoi 
!  Viscosity Model = String "power law"
!  Viscosity = Real $eta 
!  Viscosity Exponent = Real $1.0/n 
!  Critical Shear Rate = Real 1.0e-15

  Viscosity Model = String "Glen"
  ! Viscosity has to be set to a dummy value
  ! to avoid warning output from Elmer
  Viscosity = Real 1.0 
  Glen Exponent = Real 3.0
  Critical Shear Rate = Real 1.0e-10
  ! Rate factors (Paterson value in MPa^-3a^-1)
  Rate Factor 1 = Real 1.258e13  
  Rate Factor 2 = Real 6.046e28
  ! these are in SI units - no problem, as long as
  ! the gas constant also is 
  Activation Energy 1 = Real 60e3
  Activation Energy 2 = Real 139e3  
  Glen Enhancement Factor = Real 1.0
  ! the variable taken to evaluate the Arrhenius law
  ! in general this should be the temperature relative
  ! to pressure melting point. The suggestion below plugs
  ! in the correct value obtained with TemperateIceSolver
  !Temperature Field Variable = String "Temp"
  Constant Temperature = Real -9.0
  ! the temperature to switch between the 
  ! two regimes in the flow law
  Limit Temperature = Real -10.0

  Sea Level = Real $sl0
!  Sea Level = Variable Coordinate 1
!    Real MATC "sealevel(tx)"

  Min Zs = Variable "Zb"    
    Real MATC "tx + 10.0"                          
  Max Zs = Real 1.0e6

  !! Bed condition
  ! Min Zb = Equals "bedrock"
  Min Zb = Variable Coordinate 1
    Real Procedure "bedrockfunction_deepening" "initbedrock"
  
  Max Zb = Real 1.0e6
End

!---------------------------------------------------
!---------------- SOLVERS --------------------------
!---------------------------------------------------

Solver 1
  Exec Solver = "Before Simulation"
  
  Equation = "MapCoordinate"
  Procedure = "StructuredMeshMapper" "StructuredMeshMapper"

  !Variable = -nooutput StructDummy
  !Mapping Mask Variable = String "Depth"
  Active Coordinate = Integer 2 ! the mesh-update is z-direction

! For time being this is currently externally allocated
!  Mesh Velocity Variable = String "Mesh Velocity 3"

! The 1st value is special as the mesh velocity could be unrelistically high
!  Mesh Velocity First Zero = Logical True

  Dot Product Tolerance = Real 0.1
  Correct Surface = Logical True
  Minimum Height = Real 10.0
!  Exported Variable 1 = -dofs 3 "Mesh Velocity" 
End

Solver 2 
    Exec Solver = "Before Simulation"
    Equation = "GetWeights"
    Procedure = "bedrockfunction_deepening" "getWeights"
    Variable = -dofs 1 "weight"
End

!! Initialisation of the Grounded Mask
Solver 3
  Exec Solver = Before All
  Equation = GroundedMaskIni
  Procedure = "ElmerIceSolvers" "GroundedSolver"
  Variable = GroundedMask
  Variable DOFs = 1

  Toler = Real 1.0e-3
  Bedrock Variable = String "bedrock"
End

Solver 4
  Exec Solver = "Before Timestep"
  Equation = "bedrock update"
  Procedure = "bedrockfunction_deepening" "getbedrock"
  Variable = -dofs 1 "bedrock"
End

Solver 5
  Equation = "Mesh Update"
 !Exec Solver = Never
  Exec Solver = "Before TimeStep"

  Linear System Solver = Iterative
  Linear System Max Iterations = 500
  Linear System Iterative Method = BiCGStab
  Linear System Preconditioning = ILU0
  Linear System Convergence Tolerance = Real 1.0e-6
  Steady State Convergence Tolerance = 1.0e-04
  Linear System Residual Output = 1
  Optimize Bandwidth = Logical False
End

Solver 6
   Equation = "Flowdepth"
   Exec Solver = "Before Timestep"
   Procedure = File "ElmerIceSolvers" "FlowDepthSolver"
   Variable = String "Depth"
   Variable DOFs = 1
   Linear System Solver = "Direct"
   Linear System Direct Method = "MUMPS"
   ! this sets the direction
   ! -1 is negative z-direction (upside down)
   ! +1 is positive (downside up)
   Gradient = Real -1.0E00
  ! switch that to True, if you want to have 
  ! free surface gradients to be computed
  !------------------------------------
  Calc Free Surface = Logical False
  ! the name for the exported (if not existing) added variable
  ! the gradients will be stored in variables with the base
  ! name given and "Grad1" and (in 3 dimensions) "Grad2" added,
  ! so in our case "FreeSurfGrad1" and "FreeSurfGrad2"
  ! again, if those variables did not exist, they will be
  ! automatically created
  !-----------------------------------------------------------
  !Freesurf Name = String "FreeSurf"
End
 
Solver 7
   Equation = "Flowheight"
   Exec Solver = "Before Timestep"
   Procedure = File "ElmerIceSolvers" "FlowDepthSolver"
   Variable = String "Height"
   Variable DOFs = 1
   Linear System Solver = "Direct"
   Linear System Direct Method = "MUMPS"
   ! this sets the direction
   ! -1 is negative z-direction (upside down)
   ! +1 is positive (downside up)
   Gradient = Real 1.0E00
  ! switch that to True, if you want to have 
  ! free surface gradients to be computed
  !------------------------------------
  Calc Free Surface = Logical False
  ! the name for the exported (if not existing) added variable
  ! the gradients will be stored in variables with the base
  ! name given and "Grad1" and (in 3 dimensions) "Grad2" added,
  ! so in our case "FreeSurfGrad1" and "FreeSurfGrad2"
  ! again, if those variables did not exist, they will be
  ! automatically created
  !-----------------------------------------------------------
  !Freesurf Name = String "FreeSurf"
End 

Solver 8
  Equation = "NormalVector"
  Procedure = "ElmerIceSolvers" "ComputeNormalSolver"
  Variable = String "Normal Vector"
  Variable DOFs = 2

  ComputeAll = Logical False
  Optimize Bandwidth = Logical False
End

Solver 9
  Equation = Fw
  Procedure = "ElmerIceSolvers" "GetHydrostaticLoads"
  Variable = Fw[Fwater:2]
  Variable DOFs = 2
End

Solver 10
  Equation = "Navier-Stokes"
  Linear System Solver = Direct     
  Linear System Direct Method = umfpack

  Nonlinear System Max Iterations = 50
  Nonlinear System Convergence Tolerance  = 1.0e-5
  Nonlinear System Newton After Iterations = 50  
  Nonlinear System Newton After Tolerance = 1.0e-05
  Nonlinear System Relaxation Factor = 1.00
  Nonlinear System Reset Newton = Logical True
    
  Steady State Convergence Tolerance = Real 1.0e-4

  Stabilization Method = String Bubbles

  Exported Variable 1 = Flow Solution Loads[Stress Vector:2 CEQ Residual:1] 
  Calculate Loads = Logical True

  Exported Variable 2 = -dofs 1 "dSdt"
  Exported Variable 3 = -dofs 1 "dS"
!  Exported Variable 4 = -dofs 1 "Bedrock"

  Flow Model = String "Stokes"
End


Solver 11
  Equation = "Free Surface Top"
  Procedure =  "FreeSurfaceSolver" "FreeSurfaceSolver"
  Variable = "Zs"
  ALE Formulation = Logical True ! we can have a sidewards moving mesh
  Variable DOFs =  1
  Exported Variable 1 = "Zs Residual"
  Exported Variable 1 DOFs = 1
  Exported Variable 2 = "Reference Zs"
  Exported Variable 2 DOFs = 1
  Before Linsolve = "EliminateDirichlet" "EliminateDirichlet"

  Linear System Solver = Iterative
  Linear System Direct Method = UMFPACK
  Linear System Max Iterations = 1500
  Linear System Iterative Method = BiCGStab
  Linear System Preconditioning = ILU0
  Linear System Convergence Tolerance = Real 1.0e-6
  Linear System Abort Not Converged = False
  Linear System Residual Output = 1

  Nonlinear System Max Iterations = 100
  Nonlinear System Convergence Tolerance  = 1.0e-5
  Nonlinear System Relaxation Factor = 1.00

  Steady State Convergence Tolerance = 1.0e-03

  Stabilization Method = Stabilized
  Apply Dirichlet = Logical True

  Relaxation Factor = Real 1.0
End 

Solver 12
  Equation = "Free Surface Sea/Shelf"
  Procedure =  "./MyFreeSurfaceSolver" "FreeSurfaceSolver"
  Variable = "Zb"
  Variable DOFS =  1
  Exported Variable 1 = "Zb Residual"
  Exported Variable 1 DOFs = 1
  Exported Variable 2 = "Reference Zb"
  Exported Variable 2 DOFs = 1
  ALE Formulation = Logical True ! we can have a sidewards moving mesh
  Before Linsolve = "EliminateDirichlet" "EliminateDirichlet"

  Linear System Solver = Iterative
  Linear System Max Iterations = 1500
  Linear System Iterative Method = BiCGStab
  Linear System Preconditioning = ILU0
  Linear System Convergence Tolerance = Real 1.0e-6
  Linear System Abort Not Converged = False
  Linear System Residual Output = 1

  Nonlinear System Max Iterations = 100
  Nonlinear System Convergence Tolerance  = 1.0e-5
  Nonlinear System Relaxation Factor = 1.00

  Steady State Convergence Tolerance = 1.0e-03

  Stabilization Method = Stabilized
  Apply Dirichlet = Logical True

  Relaxation Factor = Real 1.0

End

!! Compute the Mask 
Solver 13
  Equation = GroundedMask
  Procedure = "ElmerIceSolvers" "GroundedSolver"
  Variable = GroundedMask
  Variable DOFs = 1

  Toler = Real 1.0e-3
  Bedrock Variable = String "bedrock"
End

Solver 14
  Equation = String "StressSolver"
  Procedure =  File "ElmerIceSolvers" "ComputeDevStress"
  Exec Solver = "After Timestep"
  ! this is just a dummy, hence no output is needed
  !-----------------------------------------------------------------------
  Variable = -nooutput "Sij"
  Variable DOFs = 1
  ! the name of the variable containing the flow solution (U,V,W,Pressure)
  !-----------------------------------------------------------------------
  Flow Solver Name = String "Flow Solution"
  Exported Variable 1 = "Stress" ! [Sxx, Syy, Szz, Sxy] in 2D
                                 ! [Sxx, Syy, Szz, Sxy, Syz, Szx] in 3D
  Exported Variable 1 DOFs = 4   ! 4 in 2D, 6 in 3D
  Stress Variable Name = String "Stress"
  Linear System Solver = "Iterative"
  Linear System Iterative Method = "BiCGStab"
  Linear System Max Iterations = 300
  Linear System Convergence Tolerance = 1.0E-09
  Linear System Abort Not Converged = True
  Linear System Preconditioning = "ILU0"
  Linear System Residual Output = 1
End

Solver 15
  Exec Solver = After TimeStep
  Equation = "Save Scalars"
  Procedure = File "SaveData" "SaveScalars"

  Filename = "$namerun".dat" !"
  File Append = Logical False

  Variable 1 = String "Time"

  Variable 2 = String "flow solution"
  Operator 2 = String "Volume"

  Variable 3 = String "Velocity 1"
  Operator 3 = String "Max"

  Variable 4 = String "GroundedMask"
  Operator 4 = String "Sum"

  Operator 5 = String "cpu time"
End

!---------------------------------------------------
!---------------- EQUATIONS ------------------------
!---------------------------------------------------

Equation 1 ! for glacier bulk
  Active Solvers (9) = 1 2 5 6 7 8 10 14 15
End

Equation 2 ! for free surface
  Active Solvers(1) = 11
  Flow Solution Name = String "Flow Solution"
  Convection = String Computed
End 

Equation 3 ! for bedrock surface
  Active Solvers(5) = 3 4 9 12 13
  Flow Solution Name = String "Flow Solution"
  Convection = String Computed
End

!---------------------------------------------------
!---------------- BOUNDARY CONDITIONS --------------
!---------------------------------------------------

!! BC  Bedrock + Shelf
Boundary Condition 1
  Name = "bottom"
  Target Boundaries = 1
  Body Id = 3

  Normal-Tangential Velocity = Logical True
  Flow Force BC = Logical True

!
! Condition where the bed is stuck
!
  Bottom Surface = Variable Coordinate 1
    Real Procedure "bedrockfunction_deepening" "initbedrock"

  Zb = Variable Coordinate 1
    Real Procedure "bedrockfunction_deepening" "initbedrock" 
  Zb Condition = Variable GroundedMask
    Real MATC "tx + 0.5"
  Mesh Update 1 = Variable Mesh Update 1, weight, Velocity 1
       Real MATC "tangentialupdate(tx)"
  Mesh Update 2 = Variable Reference Zb, Zb
    Real MATC "tx(1) - tx(0)"
!
! Bedrock conditions
!
  Slip Coefficient 2 = Variable Coordinate 1
    Real Procedure "ElmerIceUSF" "SlidCoef_Contact"
 
  Sliding Law = String "Weertman" 
  Weertman Friction Coefficient = Real $C
!  Weertman Friction Coefficient = Variable Coordinate 1
!      Real MATC "getslipcoeff(tx)"
  !Weertman Friction Coefficient = Variable Coordinate 1
  !   Real MATC "0.00013 + 0.00013 * (2000 - tx(0))/2000.0" ! 214 kPa
  !Weertman Friction Coefficient = Variable Coordinate 1
  !    Real MATC "0.1 - (tx > 2000.0) * 0.099"
  !Weertman Exponent = Real $(1.0/n)
  Weertman Exponent = Real 1.0
  Weertman Linear Velocity = Real 0.01
 
  ! Options are 'Last Grounded' (default), 'First Floating' or 'Discontinuous' 
  ! Grounding Line Definition = String "Last Grounded"
    Grounding Line Definition = String "Discontinuous"
  !Grounding Line Definition = String "First Floating"
  Test Contact Tolerance = real 1.0e-3

  Velocity 1 = Real 0.0
  Velocity 1 Condition = Variable GroundedMask
    Real MATC "tx + 0.5"
!
! Shelf conditions
!
  External Pressure = Variable Coordinate 2
     Real Procedure "ElmerIceUSF" "SeaPressure"
  
  Slip Coefficient 1 = Variable Coordinate 2     
     Real Procedure "ElmerIceUSF" "SeaSpring"

  ComputeNormal Condition = Variable GroundedMask
    Real MATC "tx + 0.5"

  Compute Sea Pressure = Logical True
  Compute Sea Spring = Logical True

  Height = Real 0.0
End

!! BC Lateral Ice-Shelf (air or sea contact)
Boundary Condition 2
  Name = "front"
  Target Boundaries = 2

  Flow Force BC = Logical True
  External Pressure = Variable Coordinate 2
     Real Procedure "ElmerIceUSF" "SeaPressure"
  !Mesh Update 1 = Variable Mesh Update 1, Velocity 1
  !  Real MATC "tx(0) + tx(1) * dt"  
  Mesh Update 1 = Variable Mesh Update 1, weight, Velocity 1
       Real MATC "tangentialupdate(tx)"
  Compute Sea Pressure = Logical True
  ComputeNormal = Logical True
End

!! BC  Free surface Top
Boundary Condition 3
  Name = "top"
  Target Boundaries = 3 
  Body Id = 2
  Depth = Real 0.0
  ComputeNormal = Logical False
  Mesh Update 1 = Variable Mesh Update 1, weight, Velocity 1
       Real MATC "tangentialupdate(tx)"
  Mesh Update 2  = Variable Zs, Reference Zs
    Real MATC "tx(0) - tx(1)"
  Top Surface = Equals Coordinate 2
End

!! Symetry axis
Boundary Condition 4
  Name = "back"
  Target Boundaries = 4
  Velocity 1 = $U0
  Mesh Update 1 = 0.0
  Mesh Update 2 = 0.0
  ComputeNormal = Logical False
End
